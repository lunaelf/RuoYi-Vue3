name: branch-ci

on:
  push:
    branches:
      - "containerize"
  pull_request:
    branches:
      - "containerize"

env:
  DOCKER_REGISTRY_HOST: crpi-9t66pyx5tr44wo4w.cn-shanghai.personal.cr.aliyuncs.com
  DOCKER_REGISTRY_NAMESPACE: lunaelf
  DOCKER_REGISTRY_REPOSITORY: ruoyi-vue3

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_REGISTRY_HOST }}/${{ env.DOCKER_REGISTRY_NAMESPACE }}/${{ env.DOCKER_REGISTRY_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Login to Docker Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY_HOST }}
          username: ${{ vars.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      # - name: Build and test
      #   uses: docker/build-push-action@v6
      #   with:
      #     target: test
      #     load: true
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          target: prod
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
